--문제 1.
---EMPLOYEES 테이블과, DEPARTMENTS 테이블은 DEPARTMENT_ID로 연결되어 있습니다.
---EMPLOYEES, DEPARTMENTS 테이블을 엘리어스를 이용해서
--각각 INNER , LEFT OUTER, RIGHT OUTER, FULL OUTER 조인 하세요. (달라지는 행의 개수 확인)
SELECT * FROM EMPLOYEES E JOIN DEPARTMENTS D ON E.DEPARTMENT_ID =D.DEPARTMENT_ID;
SELECT * FROM EMPLOYEES E LEFT JOIN DEPARTMENTS D ON E.DEPARTMENT_ID =D.DEPARTMENT_ID;
SELECT * FROM EMPLOYEES E RIGHT JOIN DEPARTMENTS D ON E.DEPARTMENT_ID =D.DEPARTMENT_ID;
SELECT * FROM EMPLOYEES E FULL JOIN DEPARTMENTS D ON E.DEPARTMENT_ID =D.DEPARTMENT_ID;
--문제 2.
---EMPLOYEES, DEPARTMENTS 테이블을 INNER JOIN하세요
--조건)employee_id가 200인 사람의 이름, department_id를 출력하세요
--조건)이름 컬럼은 first_name과 last_name을 합쳐서 출력합니다
SELECT FIRST_NAME || ' ' || LAST_NAME AS NAME, 
       D.DEPARTMENT_ID 
FROM EMPLOYEES E 
JOIN DEPARTMENTS D 
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
WHERE EMPLOYEE_ID = 200 ;
--문제 3.
---EMPLOYEES, JOBS테이블을 INNER JOIN하세요
--조건) 모든 사원의 이름과 직무아이디, 직무 타이틀을 출력하고, 이름 기준으로 오름차순 정렬
--HINT) 어떤 컬럼으로 서로 연결되 있는지 확인
SELECT * FROM JOBS;
SELECT FIRST_NAME || ' ' || LAST_NAME AS NAME , E.JOB_ID , JOB_TITLE 
FROM EMPLOYEES E
JOIN JOBS J
ON E.JOB_ID = J.JOB_ID
ORDER BY NAME ASC;
--문제 4.
----JOBS테이블과 JOB_HISTORY테이블을 LEFT_OUTER JOIN 하세요.
SELECT * FROM JOB_HISTORY ;
SELECT * 
FROM JOBS J
LEFT JOIN JOB_HISTORY H
ON J.JOB_ID = H.JOB_ID ;
--문제 5.
----Steven King의 부서명을 출력하세요.
SELECT DEPARTMENT_ID ,FIRST_NAME || ' ' ||LAST_NAME
FROM EMPLOYEES
WHERE FIRST_NAME ='Steven' AND LAST_NAME ='King';
--문제 6.
----EMPLOYEES 테이블과 DEPARTMENTS 테이블을 Cartesian Product(Cross join)처리하세요
SELECT * 
FROM EMPLOYEES E
CROSS JOIN DEPARTMENTS D;
--문제 7.
----EMPLOYEES 테이블과 DEPARTMENTS 테이블의 부서번호를 조인하고 SA_MAN 사원만의 사원번호, 이름, 
--급여, 부서명, 근무지를 출력하세요. (Alias를 사용)
SELECT * FROM LOCATIONS;
SELECT E.EMPLOYEE_ID , E.FIRST_NAME || ' ' || E.LAST_NAME AS NAME , E.SALARY , D.DEPARTMENT_NAME ,l.street_address
FROM EMPLOYEES E
JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
JOIN LOCATIONS L 
ON D.LOCATION_ID = L.LOCATION_ID
WHERE JOB_ID = 'SA_MAN';
--문제 8.
---- employees, jobs 테이블을 조인 지정하고 job_title이 'Stock Manager', 'Stock Clerk'인 직원 정보만
--출력하세요.
SELECT * FROM JOBS;
SELECT * 
FROM EMPLOYEES E
JOIN JOBS J
ON E.JOB_ID = J.JOB_ID
JOIN JOB_HISTORY H
ON J.JOB_ID = H.JOB_ID
WHERE JOB_TITLE = 'Stock Manager' or JOB_TITLE = 'Stock Clerk';
--문제 9.
---- departments 테이블에서 직원이 없는 부서를 찾아 출력하세요. LEFT OUTER JOIN 사용
SELECT * FROM DEPARTMENTS D;
SELECT DEPARTMENT_NAME 
FROM DEPARTMENTS D
LEFT JOIN EMPLOYEES E
ON d.department_ID = E.DEPARTMENT_ID
WHERE E.EMPLOYEE_ID IS NULL;
--문제 10. 
---join을 이용해서 사원의 이름과 그 사원의 매니저 이름을 출력하세요
--힌트) EMPLOYEES 테이블과 EMPLOYEES 테이블을 조인하세요.
SELECT * FROM EMPLOYEES;
SELECT E1.FIRST_NAME ||' '||E1.LAST_NAME AS 사원 ,E2.FIRST_NAME || ' ' || E2.LAST_NAME AS 매니저
FROM EMPLOYEES E1
LEFT JOIN EMPLOYEES E2
ON E1.MANAGER_ID = E2.EMPLOYEE_ID;
--문제 11. 
----6. EMPLOYEES 테이블에서 left join하여 관리자(매니저)와, 매니저의 이름, 매니저의 급여 까지 출력하세요
----매니저 아이디가 없는 사람은 배제하고 급여는 역순으로 출력하세요
SELECT E1.FIRST_NAME || ' ' ||E1.LAST_NAME AS 사원 , E2.FIRST_NAME || ' ' || E2.LAST_NAME AS 매니저 , E2.SALARY AS "매니저 급여"
FROM EMPLOYEES E1
LEFT JOIN EMPLOYEES E2
ON E1.MANAGER_ID = E2.EMPLOYEE_ID
WHERE E1.MANAGER_ID IS NOT NULL
ORDER BY E2.SALARY DESC;
--문제 12
--윌리엄스미스의 직급도(상급자)를 구하세요.
--STEVEN > GERALD > WILLIAM
SELECT FIRST_NAME FROM EMPLOYEES;
SELECT E1.FIRST_NAME ||'>'|| E2.FIRST_NAME ||'>'|| E3.FIRST_NAME 
FROM EMPLOYEES E1
JOIN EMPLOYEES E2
ON E1.MANAGER_ID = E2.EMPLOYEE_ID
JOIN EMPLOYEES E3
ON E2.MANAGER_ID = E3.EMPLOYEE_ID
WHERE E1.FIRST_NAME IN ('William') AND E1.LAST_NAME IN('Smith');